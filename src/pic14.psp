%!ps
/LDiff {
% Compute the difference between two points
% x0 y0 x1 y1
1 index 4 index sub 1 index 4 index sub
mark 7 3 roll cleartomark
} def
%%%%%%%%%%%%%%%%%%%%
/LAdd {
% Add offset to a point
% x0 y0 dx dy
exch 4 1 roll add 3 1 roll add exch
} def
%%%%%%%%%%%%%%%%%%%%
/LDist {
% Compute distance between two points.
% x0 y0 x1 y1
LDiff dup mul exch dup mul add sqrt
} def
%%%%%%%%%%%%%%%%%%%%
/LXYScale {
% Multiply a coordinate by a scalar.
% x0 y0 t
dup 4 1 roll mul 3 1 roll mul exch
} def
%%%%%%%%%%%%%%%%%%%%
/LAng {
% Compute the angle of slope between two points.
% x0 y0 x1 y1
LDiff exch atan 
} def
%%%%%%%%%%%%%%%%%%%%
/LOnLine { 
% x0 y0 x1 y1 t 
5 copy pop LDiff
3 2 roll LXYScale
4 2 roll pop pop
LAdd
} def
%%%%%%%%%%%%%%%%%%%%
/LOnOrtho {
% x0 y0 x1 y1 t
5 copy pop LDiff
% rotate by 90 degrees
-1 mul exch
3 2 roll LXYScale
LAdd
4 2 roll pop pop
} def
%%%%%%%%%%%%%%%%%%%%
/LOnCircle { 
% x0 y0 x1 y1 t 
180 mul 3.1416 div
5 copy pop LDist
% x0 y0 x1 y1 t r
exch dup cos exch sin 3 2 roll LXYScale
% x0 y0 x1 y1 x y
4 2 roll pop pop LAdd
} def
%%%%%%%%%%%%%%%%%%%%
/LOnBox {
% x0 y0 x1 y1 t
pop 3 1 roll pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% for use in LOnSpline
/LA { add 0.5 mul store } def
/LB { exch def } def
/LD { 0 def } def
%%%%%%%%%%%
/LE { 
/tt LB
/a3y LB % define parameters
/a3x LB
/a2y LB
/a2x LB
/a1y LB
/a1x LB
/a0y LB
/a0x LB
/b0x LD % define local variables
/b0y LD
/b1x LD
/b1y LD
/b2x LD
/b2y LD
/c0x LD
/c0y LD
/c1x LD
/c1y LD
/d0x LD
/d0y LD
} def
/LOnSpline {
% a0x a0y a1x a1y a2x a2y a3x a3y tt
50 dict begin
LE % define parameters and local variables
7 {% iterate 7 times
LF % compute new half splines
tt 0.5 le { % on the left half
/tt tt 2 mul store
/a1x b0x store
/a1y b0y store
/a2x c0x store
/a2y c0y store
/a3x d0x store
/a3y d0y store }
{ % on the right half
/tt tt 2 mul 1 sub store
/a0x d0x store
/a0y d0y store
/a1x c1x store
/a1y c1y store
/a2x b2x store
/a2y b2y store } ifelse
} repeat
a0x a0y a3x a3y tt LOnLine % Interpolate between two end points
end
} def
/LLine { 
% x0 y0 x1 y1 
newpath moveto lineto 
stroke 
} def 
%%%%%%%%%%%%%%%%%%%%
/LUVec { % compute a unit vector from (x0,y0) to (x1,y1)
% x0 y0 x1 y1
4 copy LDist
5 1 roll LDiff 3 -1 roll 1 exch div LXYScale
} def
%%%%%%%%%%%%%%%%%%%%
/LArc { 
% x0 y0 x1 y1 x2 y2
newpath 
6 copy pop pop LDist
7 copy pop pop pop LAng
8 copy pop pop 4 2 roll pop pop LAng
% x0 y0  x1 y1 x2 y2 r th1 th2
7 3 roll pop pop moveto
% x0 y0 r th1 th2
arc stroke
} def
%%%%%%%%%%%%%%%%%%%%
/LCircle {
% x0 y0 x1 y1
4 copy LDist 3 1 roll pop pop
% x0 y0 r
newpath 3 copy 0 LAdd moveto
0 360 arc stroke
} def
%%%%%%%%%%%%%%%%%%%% 
/LDot { 
% x0 y0 
2 copy moveto 
currentlinewidth 1.7 mul 0 rmoveto currentlinewidth 1.7 mul 
0 360 arc 
closepath fill
} def 
%%%%%%%%%%%%%%%%% 
/LOdot {
% x0 y0
2 copy
gsave newpath 1 setgray % draw in white
2 copy moveto % move to center of circle
currentlinewidth 1.7 mul 0 rmoveto % move to radius of circle
currentlinewidth 1.7 mul % compute radius of circle
0 360 arc closepath fill % fill in the center
0 setgray % draw in black
2 copy moveto % move to center of circle
currentlinewidth 1.7 mul 0 rmoveto % move to the radius of circle
currentlinewidth 1.7 mul % compute radius of circle
0 360 arc LThin stroke % draw the circle
grestore } def
%%%%%%%%%%%%%%%%% 
/LNarrow { 0.6 setlinewidth } def
%%%%%%%%%%%%%%%%% 
/LWide { 1.2 setlinewidth } def
%%%%%%%%%%%%%%%%%
/LThin { 0.3 setlinewidth } def
/LFine { 0.3 setlinewidth } def
%%%%%%%%%%%%%%%%%
/LDashed { [3] 0 setdash } def
%%%%%%%%%%%%%%%%%
/LNoDash { [] 0 setdash } def
%%%%%%%%%%%%%%%%%
/LSpline {
% x0 y0 x1 y1 x2 y2 x3 y3
8 -2 roll
moveto curveto stroke
} def
%%%%%%%%%%%%%%%%% 
/LTextloc {
% Remove arguemnts from stack, no Postscript drawing needed
% x0 y0 a
pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%
/LTextlocx {
% remove arguments from stack, no Postscript drawing needed
% x0 y0 x1 y1 x2 y2 a
pop pop pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%
/LVecx { currentlinewidth 5 mul neg } def
/LVecxx { currentlinewidth 4 mul neg } def
/LVecy { currentlinewidth 3 mul } def
/LVector {
% Draw a vector from (x0,y0) to (x1,y1)
4 copy 4 copy LUVec LVecxx LXYScale LAdd LLine
% need to draw arrow head
% x0 y0 x1 y1
2 copy moveto
4 copy LAng
gsave currentpoint translate rotate
LVecx LVecy neg moveto LVecxx 0 lineto LVecx LVecy lineto 
0 0 lineto closepath fill grestore
pop pop pop pop
} def
%%%%%%%%%%%%%%%%%
/LSArc {
% Draw a standard arc centered at (x0,y0) from (x1,y1) to (x2,y2)
% x0 y0 x1 y1 x2 y2
newpath
6 copy pop pop LAng
7 copy pop 4 2 roll pop pop LAng
% x0 y0 x1 y1 x2 y2 th1 th2
6 2 roll pop pop pop pop
% x0 y0 th1 th2
gsave 0.3 setlinewidth
4 copy pop dup cos 10 mul exch sin 10 mul LAdd moveto
10 3 1 roll arc stroke
grestore
} def
%%%%%%%%%%%%%%%%%
/LCorner {
% Draw a perpendicular indicator at the corner at x0 y0
% x0 y0 x1 y1 x2 y2
gsave
0.3 setlinewidth
newpath
6 copy pop pop LUVec 5 LXYScale
8 copy 6 4 roll pop pop pop pop LUVec 5 LXYScale
8 4 roll pop pop pop pop
% x0 y0 dx1 dy1 dx2 dy2
6 copy pop pop LAdd moveto 6 copy LAdd LAdd lineto
6 copy 4 2 roll pop pop LAdd lineto stroke
grestore
pop pop pop pop pop pop
} def
/LBegin {
% size
20 add dict begin
} def
%%%%%%%%%%%%%%%%%%
/LEnd {
end
} def
104 LBegin
/p0 { 20 20 } def
/p1 { 40 20 } def
/p2 { 60 20 } def
/p3 { 80 20 } def 
/p4 { 100 20 } def
/p5 { 120 20 } def
/p6 { 140 20 } def
/p7 { 160 20 } def
/p8 { 180 20 } def
/p9 { 200 20 } def
/p10 { 30 40 } def
/p11 { 30 10 } def
/p12 { 40 40 } def
/p13 { 50 40 } def
/p14 { 50 80 } def
/p15 { 90 40 } def
/p16 { 90 10 } def
/p17 { 100 40 } def
/p18 { 110 40 } def
/p19 { 110 80 } def
/p20 { 150 40 } def
/p21 { 150 20 } def
/p22 { 160 40 } def
/p23 { 170 40 } def
/p24 { 170 60 } def
/p25 { 40 60 } def
/p26 { 70 60 } def
/p27 { 100 60 } def
/p28 { 140 60 } def
/p29 { 160 60 } def
/p30 { 180 60 } def
/p31 { 55 80 } def
/p32 { 55 20 } def
/p33 { 70 80 } def
/p34 { 85 80 } def
/p35 { 85 100 } def 
/p36 {150 80 } def
/p37 { 150 20 } def
/p38 { 160 80 } def
/p39 { 170 80 } def
/p40 { 170 100 } def
/p41 { 20 100 } def
/p42 { 70 100 } def
/p43 { 160 100 } def
/p44 { 55 120 } def
/p45 { 55 20 } def
/p46 { 80 120 } def
/p47 { 80 100 } def
/p48 { 125 120 } def
/p49 { 125 140 } def
/p50 { 90 140 } def
LNarrow
p2 p1 2 LTextloc
p3 p4 3 LTextloc
p4 p5 4 LTextloc
p6 p7 5 LTextloc
p7 p8 6 LTextloc
p8 p9 7 LTextloc
p10 p11 8 LTextloc
p12 p1 9 LTextloc
p13 p14 10 LTextloc
p15 p16 11 LTextloc
p17 p4 12 LTextloc
p18 p19 13 LTextloc
p20 p21 14 LTextloc
p22 p7 15 LTextloc
p23 p24 16 LTextloc
p31 p32 17 LTextloc
p33 p26 18 LTextloc
p34 p35 19 LTextloc
p36 p37 20 LTextloc
p38 p29 21 LTextloc
p39 p40 22 LTextloc
p44 p45 23 LTextloc
p46 p47 24 LTextloc
p48 p49 25 LTextloc
p0 LDot
p1 LDot
p5 LDot
p25 LDot
p26 LDot
p27 LDot
p28 LDot
p29 LDot
p30 LDot
p41 LDot
p42 LDot
p43 LDot
p50 LDot
p25 p0 LLine
p25 p1 LLine
p25 p2 LLine
p27 p3 LLine
p27 p4 LLine
p27 p5 LLine
p29 p6 LLine
p29 p7 LLine
p29 p8 LLine
p42 p25 LLine
p42 p26 LLine
p42 p27 LLine
p43 p28 LLine
p43 p29 LLine
p43 p30 LLine
p50 p41 LLine
p50 p42 LLine
p50 p43 LLine
LEnd
