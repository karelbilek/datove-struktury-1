%!ps
%%BoundingBox: 14 12 296 103
/LDiff {
% Compute the difference between two points
% x0 y0 x1 y1
1 index 4 index sub 1 index 4 index sub
mark 7 3 roll cleartomark
} def
%%%%%%%%%%%%%%%%%%%%
/LAdd {
% Add offset to a point
% x0 y0 dx dy
exch 4 1 roll add 3 1 roll add exch
} def
%%%%%%%%%%%%%%%%%%%%
/LDist {
% Compute distance between two points.
% x0 y0 x1 y1
LDiff dup mul exch dup mul add sqrt
} def
%%%%%%%%%%%%%%%%%%%%
/LXYScale {
% Multiply a coordinate by a scalar.
% x0 y0 t
dup 4 1 roll mul 3 1 roll mul exch
} def
%%%%%%%%%%%%%%%%%%%%
/LAng {
% Compute the angle of slope between two points.
% x0 y0 x1 y1
LDiff exch atan 
} def
%%%%%%%%%%%%%%%%%%%%
/LOnLine { 
% x0 y0 x1 y1 t 
5 copy pop LDiff
3 2 roll LXYScale
4 2 roll pop pop
LAdd
} def
%%%%%%%%%%%%%%%%%%%%
/LOnOrtho {
% x0 y0 x1 y1 t
5 copy pop LDiff
% rotate by 90 degrees
-1 mul exch
3 2 roll LXYScale
LAdd
4 2 roll pop pop
} def
%%%%%%%%%%%%%%%%%%%%
/LOnCircle { 
% x0 y0 x1 y1 t 
180 mul 3.1416 div
5 copy pop LDist
% x0 y0 x1 y1 t r
exch dup cos exch sin 3 2 roll LXYScale
% x0 y0 x1 y1 x y
4 2 roll pop pop LAdd
} def
%%%%%%%%%%%%%%%%%%%%
/LOnBox {
% x0 y0 x1 y1 t
pop 3 1 roll pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% for use in LOnSpline
/LA { add 0.5 mul store } def
/LB { exch def } def
/LD { 0 def } def
%%%%%%%%%%%
/LE { 
/tt LB
/a3y LB % define parameters
/a3x LB
/a2y LB
/a2x LB
/a1y LB
/a1x LB
/a0y LB
/a0x LB
/b0x LD % define local variables
/b0y LD
/b1x LD
/b1y LD
/b2x LD
/b2y LD
/c0x LD
/c0y LD
/c1x LD
/c1y LD
/d0x LD
/d0y LD
} def
/LOnSpline {
% a0x a0y a1x a1y a2x a2y a3x a3y tt
50 dict begin
LE % define parameters and local variables
7 {% iterate 7 times
LF % compute new half splines
tt 0.5 le { % on the left half
/tt tt 2 mul store
/a1x b0x store
/a1y b0y store
/a2x c0x store
/a2y c0y store
/a3x d0x store
/a3y d0y store }
{ % on the right half
/tt tt 2 mul 1 sub store
/a0x d0x store
/a0y d0y store
/a1x c1x store
/a1y c1y store
/a2x b2x store
/a2y b2y store } ifelse
} repeat
a0x a0y a3x a3y tt LOnLine % Interpolate between two end points
end
} def
/LLine { 
% x0 y0 x1 y1 
newpath moveto lineto 
stroke 
} def 
%%%%%%%%%%%%%%%%%%%%
/LUVec { % compute a unit vector from (x0,y0) to (x1,y1)
% x0 y0 x1 y1
4 copy LDist
5 1 roll LDiff 3 -1 roll 1 exch div LXYScale
} def
%%%%%%%%%%%%%%%%%%%%
/LArc { 
% x0 y0 x1 y1 x2 y2
newpath 
6 copy pop pop LDist
7 copy pop pop pop LAng
8 copy pop pop 4 2 roll pop pop LAng
% x0 y0  x1 y1 x2 y2 r th1 th2
7 3 roll pop pop moveto
% x0 y0 r th1 th2
arc stroke
} def
%%%%%%%%%%%%%%%%%%%%
/LCircle {
% x0 y0 x1 y1
4 copy LDist 3 1 roll pop pop
% x0 y0 r
newpath 3 copy 0 LAdd moveto
0 360 arc stroke
} def
%%%%%%%%%%%%%%%%%%%% 
/LDot { 
% x0 y0 
2 copy moveto 
currentlinewidth 1.7 mul 0 rmoveto currentlinewidth 1.7 mul 
0 360 arc 
closepath fill
} def 
%%%%%%%%%%%%%%%%% 
/LOdot {
% x0 y0
2 copy
gsave newpath 1 setgray % draw in white
2 copy moveto % move to center of circle
currentlinewidth 1.7 mul 0 rmoveto % move to radius of circle
currentlinewidth 1.7 mul % compute radius of circle
0 360 arc closepath fill % fill in the center
0 setgray % draw in black
2 copy moveto % move to center of circle
currentlinewidth 1.7 mul 0 rmoveto % move to the radius of circle
currentlinewidth 1.7 mul % compute radius of circle
0 360 arc LThin stroke % draw the circle
grestore } def
%%%%%%%%%%%%%%%%% 
/LNarrow { 0.6 setlinewidth } def
%%%%%%%%%%%%%%%%% 
/LWide { 1.2 setlinewidth } def
%%%%%%%%%%%%%%%%%
/LThin { 0.3 setlinewidth } def
/LFine { 0.3 setlinewidth } def
%%%%%%%%%%%%%%%%%
/LDashed { [3] 0 setdash } def
%%%%%%%%%%%%%%%%%
/LNoDash { [] 0 setdash } def
%%%%%%%%%%%%%%%%%
/LSpline {
% x0 y0 x1 y1 x2 y2 x3 y3
8 -2 roll
moveto curveto stroke
} def
%%%%%%%%%%%%%%%%% 
/LTextloc {
% Remove arguemnts from stack, no Postscript drawing needed
% x0 y0 a
pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%
/LTextlocx {
% remove arguments from stack, no Postscript drawing needed
% x0 y0 x1 y1 x2 y2 a
pop pop pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%
/LVecx { currentlinewidth 5 mul neg } def
/LVecxx { currentlinewidth 4 mul neg } def
/LVecy { currentlinewidth 3 mul } def
/LVector {
% Draw a vector from (x0,y0) to (x1,y1)
4 copy 4 copy LUVec LVecxx LXYScale LAdd LLine
% need to draw arrow head
% x0 y0 x1 y1
2 copy moveto
4 copy LAng
gsave currentpoint translate rotate
LVecx LVecy neg moveto LVecxx 0 lineto LVecx LVecy lineto 
0 0 lineto closepath fill grestore
pop pop pop pop
} def
%%%%%%%%%%%%%%%%%
/LSArc {
% Draw a standard arc centered at (x0,y0) from (x1,y1) to (x2,y2)
% x0 y0 x1 y1 x2 y2
newpath
6 copy pop pop LAng
7 copy pop 4 2 roll pop pop LAng
% x0 y0 x1 y1 x2 y2 th1 th2
6 2 roll pop pop pop pop
% x0 y0 th1 th2
gsave 0.3 setlinewidth
4 copy pop dup cos 10 mul exch sin 10 mul LAdd moveto
10 3 1 roll arc stroke
grestore
} def
%%%%%%%%%%%%%%%%%
/LCorner {
% Draw a perpendicular indicator at the corner at x0 y0
% x0 y0 x1 y1 x2 y2
gsave
0.3 setlinewidth
newpath
6 copy pop pop LUVec 5 LXYScale
8 copy 6 4 roll pop pop pop pop LUVec 5 LXYScale
8 4 roll pop pop pop pop
% x0 y0 dx1 dy1 dx2 dy2
6 copy pop pop LAdd moveto 6 copy LAdd LAdd lineto
6 copy 4 2 roll pop pop LAdd lineto stroke
grestore
pop pop pop pop pop pop
} def
/LBegin {
% size
20 add dict begin
} def
%%%%%%%%%%%%%%%%%%
/LEnd {
end
} def
99 LBegin
/p0 { 20 22 } def
/p1 { 50 22 } def
/p2 { 80 22 } def
/p3 { 110 22 } def
/p4 { 140 22 } def
/p5 { 170 22 } def
/p6 { 200 22 } def
/p7 { 230 22 } def
/p8 { 260 22 } def
/p9 { 290 22 } def
/p10 { 320 22 } def
/p11 { 25 18 } def
/p12 { 45 18 } def
/p13 { 55 18 } def
/p14 { 75 18 } def
/p15 { 85 18 } def
/p16 { 105 18 } def
/p17 { 115 18 } def
/p18 { 135 18 } def
/p19 { 145 18 } def
/p20 { 165 18 } def
/p21 { 175 18 } def
/p22 { 195 18 } def
/p23 { 205 18 } def
/p24 { 225 18 } def
/p25 { 235 18 } def
/p26 { 255 18 } def
/p27 { 265 18 } def
/p28 { 285 18 } def
/p29 { 20 25 } def
/p30 { 32 40 } def
/p31 { 50 25 } def
/p32 { 38 40 } def
/p33 { 80 25 } def
/p34 { 107 40 } def
/p35 { 110 25 } def
/p36 { 110 40 } def
/p37 { 140 25 } def
/p38 { 113 40 } def
/p39 { 170 25 } def
/p40 { 182 40 } def
/p41 { 200 25 } def
/p42 { 188 40 } def
/p43 { 230 25 } def
/p44 { 257 40 } def
/p45 { 260 25 } def
/p46 { 260 40 } def
/p47 { 290 25 } def
/p48 { 263 40 } def
/p49 { 35 58 } def
/p50 { 110 58 } def
/p51 { 185 58 } def
/p52 { 260 58 } def
/p53 { 320 58 } def
/p54 { 48 48 } def
/p55 { 95 48 } def
/p56 { 125 48 } def
/p57 { 170 48 } def
/p58 { 195 48 } def
/p59 { 245 48 } def
/p60 { 35 55 } def
/p61 { 70 72 } def
/p62 { 110 55 } def
/p63 { 75 72 } def
/p64 { 185 55 } def
/p65 { 220 72 } def
/p66 { 260 55 } def
/p67 { 225 72 } def
/p68 { 72 88 } def
/p69 { 222 88 } def
/p70 { 320 88 } def
/p71 { 85 78 } def
/p72 { 210 78 } def
/p73 { 72 85 } def
/p74 { 147 102 } def
/p75 { 222 85 } def
/p76 { 153 102 } def
/p77 { 150 118 } def
/p78 { 320 118} def
/p79 { 20 18 } def
/p80 { 50 18 } def
/p81 { 80 18 } def
/p82 { 110 18 } def
/p83 { 140 18 } def
/p84 { 170 18 } def
/p85 { 200 18 } def
/p86 { 230 18 } def
/p87 { 260 18 } def
/p88 { 290 18 } def
/p89 { 20 24 } def
/p90 { 50 24 } def
/p91 { 80 24 } def
/p92 { 110 24 } def
/p93 { 140 24 } def
/p94 { 170 24 } def
/p95 { 200 24 } def
/p96 { 230 24 } def
/p97 { 260 24 } def
/p98 { 290 24 } def
LNarrow
p0 p1 2 LTextloc
p1 p2 3 LTextloc
p2 p3 4 LTextloc
p3 p4 5 LTextloc
p4 p5 6 LTextloc
p5 p6 7 LTextloc
p6 p7 8 LTextloc
p7 p8 9 LTextloc
p8 p9 10 LTextloc
p9 p10 11 LTextloc
p49 p50 12 LTextloc
p50 p51 13 LTextloc
p51 p52 14 LTextloc
p52 p53 15 LTextloc
p68 p69 16 LTextloc
p69 p70 17 LTextloc
p77 p78 18 LTextloc
p11 p12 LVector
p12 p11 LVector
p13 p14 LVector
p14 p13 LVector
p15 p16 LVector
p16 p15 LVector
p17 p18 LVector
p18 p17 LVector
p19 p20 LVector
p20 p19 LVector
p21 p22 LVector
p22 p21 LVector
p23 p24 LVector
p24 p23 LVector
p25 p26 LVector
p26 p25 LVector
p27 p28 LVector
p28 p27 LVector
p29 p30 LVector
p30 p29 LVector
p31 p32 LVector
p32 p31 LVector
p33 p34 LVector
p34 p33 LVector
p35 p36 LVector
p36 p35 LVector
p37 p38 LVector
p38 p37 LVector
p39 p40 LVector
p40 p39 LVector
p41 p42 LVector
p42 p41 LVector
p43 p44 LVector
p44 p43 LVector
p45 p46 LVector
p46 p45 LVector
p47 p48 LVector
p48 p47 LVector
p54 p55 LVector
p55 p54 LVector
p56 p57 LVector
p57 p56 LVector
p58 p59 LVector
p59 p58 LVector
p60 p61 LVector
p61 p60 LVector
p62 p63 LVector
p63 p62 LVector
p64 p65 LVector
p65 p64 LVector
p66 p67 LVector
p67 p66 LVector
p71 p72 LVector
p72 p71 LVector
p73 p74 LVector
p74 p73 LVector
p75 p76 LVector
p76 p75 LVector
p79 p89 LCircle
p80 p90 LCircle
p81 p91 LCircle
p82 p92 LCircle
p83 p93 LCircle
p84 p94 LCircle
p85 p95 LCircle
p86 p96 LCircle
p87 p97 LCircle
p88 p98 LCircle
LEnd