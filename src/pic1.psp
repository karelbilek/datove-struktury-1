/LDiff {
% Compute the difference between two points
% x0 y0 x1 y1
1 index 4 index sub 1 index 4 index sub
mark 7 3 roll cleartomark
} def
%%%%%%%%%%%%%%%%%%%%
/LAdd {
% Add offset to a point
% x0 y0 dx dy
exch 4 1 roll add 3 1 roll add exch
} def
%%%%%%%%%%%%%%%%%%%%
/LDist {
% Compute distance between two points.
% x0 y0 x1 y1
LDiff dup mul exch dup mul add sqrt
} def
%%%%%%%%%%%%%%%%%%%%
/LXYScale {
% Multiply a coordinate by a scalar.
% x0 y0 t
dup 4 1 roll mul 3 1 roll mul exch
} def
%%%%%%%%%%%%%%%%%%%%
/LAng {
% Compute the angle of slope between two points.
% x0 y0 x1 y1
LDiff exch atan 
} def
%%%%%%%%%%%%%%%%%%%%
/LOnLine { 
% x0 y0 x1 y1 t 
5 copy pop LDiff
3 2 roll LXYScale
4 2 roll pop pop
LAdd
} def
%%%%%%%%%%%%%%%%%%%%
/LOnOrtho {
% x0 y0 x1 y1 t
5 copy pop LDiff
% rotate by 90 degrees
-1 mul exch
3 2 roll LXYScale
LAdd
4 2 roll pop pop
} def
%%%%%%%%%%%%%%%%%%%%
/LOnCircle { 
% x0 y0 x1 y1 t 
180 mul 3.1416 div
5 copy pop LDist
% x0 y0 x1 y1 t r
exch dup cos exch sin 3 2 roll LXYScale
% x0 y0 x1 y1 x y
4 2 roll pop pop LAdd
} def
%%%%%%%%%%%%%%%%%%%%
/LOnBox {
% x0 y0 x1 y1 t
pop 3 1 roll pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% for use in LOnSpline
/LA { add 0.5 mul store } def
/LB { exch def } def
/LD { 0 def } def
%%%%%%%%%%%
/LE { 
/tt LB
/a3y LB % define parameters
/a3x LB
/a2y LB
/a2x LB
/a1y LB
/a1x LB
/a0y LB
/a0x LB
/b0x LD % define local variables
/b0y LD
/b1x LD
/b1y LD
/b2x LD
/b2y LD
/c0x LD
/c0y LD
/c1x LD
/c1y LD
/d0x LD
/d0y LD
} def
/LOnSpline {
% a0x a0y a1x a1y a2x a2y a3x a3y tt
50 dict begin
LE % define parameters and local variables
7 {% iterate 7 times
LF % compute new half splines
tt 0.5 le { % on the left half
/tt tt 2 mul store
/a1x b0x store
/a1y b0y store
/a2x c0x store
/a2y c0y store
/a3x d0x store
/a3y d0y store }
{ % on the right half
/tt tt 2 mul 1 sub store
/a0x d0x store
/a0y d0y store
/a1x c1x store
/a1y c1y store
/a2x b2x store
/a2y b2y store } ifelse
} repeat
a0x a0y a3x a3y tt LOnLine % Interpolate between two end points
end
} def
/LLine { 
% x0 y0 x1 y1 
newpath moveto lineto 
stroke 
} def 
%%%%%%%%%%%%%%%%%%%%
/LUVec { % compute a unit vector from (x0,y0) to (x1,y1)
% x0 y0 x1 y1
4 copy LDist
5 1 roll LDiff 3 -1 roll 1 exch div LXYScale
} def
%%%%%%%%%%%%%%%%%%%%
/LArc { 
% x0 y0 x1 y1 x2 y2
newpath 
6 copy pop pop LDist
7 copy pop pop pop LAng
8 copy pop pop 4 2 roll pop pop LAng
% x0 y0  x1 y1 x2 y2 r th1 th2
7 3 roll pop pop moveto
% x0 y0 r th1 th2
arc stroke
} def
%%%%%%%%%%%%%%%%%%%%
/LCircle {
% x0 y0 x1 y1
4 copy LDist 3 1 roll pop pop
% x0 y0 r
newpath 3 copy 0 LAdd moveto
0 360 arc stroke
} def
%%%%%%%%%%%%%%%%%%%% 
/LDot { 
% x0 y0 
2 copy moveto 
currentlinewidth 1.7 mul 0 rmoveto currentlinewidth 1.7 mul 
0 360 arc 
closepath fill
} def 
%%%%%%%%%%%%%%%%% 
/LOdot {
% x0 y0
2 copy
gsave newpath 1 setgray % draw in white
2 copy moveto % move to center of circle
currentlinewidth 1.7 mul 0 rmoveto % move to radius of circle
currentlinewidth 1.7 mul % compute radius of circle
0 360 arc closepath fill % fill in the center
0 setgray % draw in black
2 copy moveto % move to center of circle
currentlinewidth 1.7 mul 0 rmoveto % move to the radius of circle
currentlinewidth 1.7 mul % compute radius of circle
0 360 arc LThin stroke % draw the circle
grestore } def
%%%%%%%%%%%%%%%%% 
/LNarrow { 0.6 setlinewidth } def
%%%%%%%%%%%%%%%%% 
/LWide { 1.2 setlinewidth } def
%%%%%%%%%%%%%%%%%
/LThin { 0.3 setlinewidth } def
/LFine { 0.3 setlinewidth } def
%%%%%%%%%%%%%%%%%
/LDashed { [3] 0 setdash } def
%%%%%%%%%%%%%%%%%
/LNoDash { [] 0 setdash } def
%%%%%%%%%%%%%%%%%
/LSpline {
% x0 y0 x1 y1 x2 y2 x3 y3
8 -2 roll
moveto curveto stroke
} def
%%%%%%%%%%%%%%%%% 
/LTextloc {
% Remove arguemnts from stack, no Postscript drawing needed
% x0 y0 a
pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%
/LTextlocx {
% remove arguments from stack, no Postscript drawing needed
% x0 y0 x1 y1 x2 y2 a
pop pop pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%
/LVecx { currentlinewidth 5 mul neg } def
/LVecxx { currentlinewidth 4 mul neg } def
/LVecy { currentlinewidth 3 mul } def
/LVector {
% Draw a vector from (x0,y0) to (x1,y1)
4 copy 4 copy LUVec LVecxx LXYScale LAdd LLine
% need to draw arrow head
% x0 y0 x1 y1
2 copy moveto
4 copy LAng
gsave currentpoint translate rotate
LVecx LVecy neg moveto LVecxx 0 lineto LVecx LVecy lineto 
0 0 lineto closepath fill grestore
pop pop pop pop
} def
%%%%%%%%%%%%%%%%%
/LSArc {
% Draw a standard arc centered at (x0,y0) from (x1,y1) to (x2,y2)
% x0 y0 x1 y1 x2 y2
newpath
6 copy pop pop LAng
7 copy pop 4 2 roll pop pop LAng
% x0 y0 x1 y1 x2 y2 th1 th2
6 2 roll pop pop pop pop
% x0 y0 th1 th2
gsave 0.3 setlinewidth
4 copy pop dup cos 10 mul exch sin 10 mul LAdd moveto
10 3 1 roll arc stroke
grestore
} def
%%%%%%%%%%%%%%%%%
/LCorner {
% Draw a perpendicular indicator at the corner at x0 y0
% x0 y0 x1 y1 x2 y2
gsave
0.3 setlinewidth
newpath
6 copy pop pop LUVec 5 LXYScale
8 copy 6 4 roll pop pop pop pop LUVec 5 LXYScale
8 4 roll pop pop pop pop
% x0 y0 dx1 dy1 dx2 dy2
6 copy pop pop LAdd moveto 6 copy LAdd LAdd lineto
6 copy 4 2 roll pop pop LAdd lineto stroke
grestore
pop pop pop pop pop pop
} def
/LBegin {
% size
20 add dict begin
} def
%%%%%%%%%%%%%%%%%%
/LEnd {
end
} def
52 LBegin
/p0 { 50 10 } def 
/p1 { 70 10 } def
/p2 { 90 10 } def
/p3 { 110 10 } def
/p4 { 60 15 } def
/p5 { 100 15 } def
/p6 { 130 15 } def
/p7 { 10 30 } def 
/p8 { 30 30 } def
/p9 { 60 30 } def
/p10 { 100 30 } def
/p11 { 20 35 } def
/p12 { 40 35 } def
/p13 { 20 50 } def
/p14 { 80 50 } def
/p15 { 80 70 } def
/p16 { 130 50 } def
/p17 { 150 50 } def
/p18 { 140 55 } def
/p19 { 160 55 } def
/p20 { 50 70 } def
/p21 { 50 60 } def
/p22 { 140 70 } def
/p23 { 100 90 } def
/p24 { 100 110 } def
/p25 { 100 130 } def
/p26 { 150 60 } def
/p27 { 190 60 } def
/p28 { 180 10 } def
/p29 { 200 10 } def
/p30 { 220 10 } def
/p31 { 240 10 } def
/p32 { 260 10 } def
/p33 { 280 10 } def
/p34 { 300 10 } def
/p35 { 320 10 } def
/p36 { 190 15 } def
/p37 { 230 15 } def
/p38 { 270 15 } def 
/p39 { 310 15 } def
/p40 { 330 15 } def
/p41 { 190 30 } def
/p42 { 230 30 } def
/p43 { 270 30 } def
/p44 { 310 30 } def
/p45 { 250 110 } def
/p46 { 210 50 } def
/p47 { 290 50 } def
/p48 { 210 10 } def
/p49 { 290 70 } def
/p50 { 250 70 } def
/p51 { 250 90 } def
LNarrow
p4 p5 2 LTextloc
p5 p6 3 LTextloc
p11 p12 4 LTextloc
p18 p19 5 LTextloc
p14 p15 6 LTextloc
p20 p21 7 LTextloc
p23 p24 8 LTextloc
p24 p25 9 LTextloc
p36 p37 10 LTextloc
p37 p38 11 LTextloc
p38 p39 12 LTextloc
p39 p40 13 LTextloc
p46 p48 14 LTextloc
p47 p49 15 LTextloc
p50 p51 16 LTextloc
p51 p45 17 LTextloc
p9 LDot
p10 LDot
p13 LDot
p14 LDot
p20 LDot
p22 LDot
p23 LDot
p24 LDot
p41 LDot
p42 LDot
p43 LDot
p44 LDot
p46 LDot
p47 LDot
p50 LDot
p51 LDot
p9 p0 LLine
p9 p1 LLine
p10 p2 LLine
p10 p3 LLine
p13 p7 LLine
p13 p8 LLine
p14 p9 LLine
p14 p10 LLine
p20 p13 LLine
p20 p14 LLine
p22 p16 LLine
p22 p17 LLine
p23 p20 LLine
p23 p22 LLine
p24 p23 LLine
p26 p27 LVector
p28 p41 LLine
p29 p41 LLine
p30 p42 LLine
p31 p42 LLine
p32 p43 LLine
p33 p43 LLine
p34 p44 LLine
p35 p44 LLine
p46 p41 LLine
p46 p42 LLine
p47 p43 LLine
p47 p44 LLine
p50 p46 LLine
p50 p47 LLine
p50 p51 LLine
LEnd
